Index: src/AI/PictureToData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AI;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class PictureToData {\r\n\r\n    //Static method that uses a picture to extract data\r\n    public static float[] picuteToData(BufferedImage image) {\r\n        float[] data = new float[image.getWidth() * image.getHeight()];\r\n        //Iterates through all pixels in the image\r\n        for (int i = 0; i < image.getWidth(); i++) {\r\n            for (int j = 0; j < image.getHeight(); j++) {\r\n                Color color = new Color(image.getRGB(i, j));\r\n                data[i * j] = (float)1 / 765 * color.getRed() + color.getGreen() + color.getBlue(); //Will return a value between 0 and 1 depending on the brightness of the pixel\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //Static method that uses a file to extract data\r\n    public static float[] picuteToData(File file) throws IOException {\r\n        BufferedImage image = ImageIO.read(file);\r\n        float[] data = new float[image.getWidth() * image.getHeight()];\r\n        //Iterates through all pixels in the image\r\n        for (int i = 0; i < image.getWidth(); i++) {\r\n            for (int j = 0; j < image.getHeight(); j++) {\r\n                Color color = new Color(image.getRGB(i, j));\r\n                data[i * j] = (float)1 / 765 * color.getRed() + color.getGreen() + color.getBlue(); //Will return a value between 0 and 1 depending on the brightness of the pixel\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //Static method that uses a filepath to extract data\r\n    public static float[] picuteToData(String filepath) throws IOException {\r\n        BufferedImage image = ImageIO.read(new File(filepath));\r\n        float[] data = new float[image.getWidth() * image.getHeight()];\r\n        //Iterates through all pixels in the image\r\n        for (int i = 0; i < image.getWidth(); i++) {\r\n            for (int j = 0; j < image.getHeight(); j++) {\r\n                Color color = new Color(image.getRGB(i, j));\r\n                data[i * j] = (float)1 / 765 * color.getRed() + color.getGreen() + color.getBlue(); //Will return a value between 0 and 1 depending on the brightness of the pixel\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/AI/PictureToData.java b/src/AI/PictureToData.java
--- a/src/AI/PictureToData.java	(revision 27cdefbb2999dbd62167f958c397b612f039b243)
+++ b/src/AI/PictureToData.java	(date 1613663925347)
@@ -36,7 +36,7 @@
     }
 
     //Static method that uses a filepath to extract data
-    public static float[] picuteToData(String filepath) throws IOException {
+    public static float[] pictureToData(String filepath) throws IOException {
         BufferedImage image = ImageIO.read(new File(filepath));
         float[] data = new float[image.getWidth() * image.getHeight()];
         //Iterates through all pixels in the image
